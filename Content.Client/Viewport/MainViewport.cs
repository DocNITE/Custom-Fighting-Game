using Content.Client.Viewport;
using Robust.Client.AutoGenerated;
using Robust.Client.Graphics;
using Robust.Client.UserInterface;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.XAML;
using Robust.Client.Utility;
using Robust.Shared.Configuration;
using Robust.Shared.Utility;

namespace Content.Client.Viewport;

[Virtual]
public partial class MainViewport : UIWidget
{
    [Dependency] private readonly IConfigurationManager _cfg = default!;
    
    public ScalingViewport Viewport { get; }
    
    public MainViewport()
    {
        IoCManager.InjectDependencies(this);
        
        Viewport = new ScalingViewport
        {
            AlwaysRender = true,
            RenderScaleMode = ScalingViewportRenderScaleMode.CeilInt,
            MouseFilter = MouseFilterMode.Stop
        };

        AddChild(Viewport);
    }

    protected override void Resized()
    {
            base.Resized();
            
    }

    protected override void Draw(DrawingHandleScreen handle)
    {
        base.Draw(handle);
        
        //handle.DrawRect(new UIBox2(Vector2.Zero, this.Size), Color.Green, true);
        //handle.SetTransform(new(32, 32), 40);
        //handle.DrawTexture(new SpriteSpecifier.Texture(new ResPath("/Textures/Arts/chel.png")).DirFrame0().Default, Vector2.Zero);
    }
}